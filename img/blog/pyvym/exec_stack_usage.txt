|                |
|                |
|                |
|                |
|                |
|                |
|                |
|                |
|                |
|                |
|                |
|                |   +----------------+
|        <-------+---+--------*       |
|                |   |     Module     |
+----------------+   +----------------+  

Step 1: An execution frame for global

module is created and pushed into stack.

"main" function object and "foo"

function object are created. 


|                |
|                |
|                |
|                |
|                |
|                |
|                |
|                |   
|                |   +----------------+
|        <-------+---+--------*       |
|                |   |      main      |
+----------------+   +----------------+
|                |
|    Module      |
+----------------+ 

Step 2: Main function object is created

at this point so the 'main' function is

to be executed. At this point, a new

execution frame is added to top of

stack and globals are copied down.

|                |
|                |
|                |
|                |
|                |
|                |   +----------------+
|        <-------+---+--------*       |
|                |   |      foo       |
+----------------+   +----------------+
|                |   
|      main      |   
+----------------+   
|                |
|    Module      |
+----------------+ 

Step 3: While executing 'main', a call

to 'foo' is noticed so another execution

frame is added to the top.

|                |
|                |   
|                |   +----------------+ 
|       <--------+---+--------*       |
|                |   |      if-block  |
+----------------+   +----------------+
|                |
|       foo      |
+----------------+
|                |   
|      main      |   
+----------------+   
|                |
|    Module      |
+----------------+ 

Step 4: If scope is encountered and

hence a new execution frame gets

added to the VM. At this point the

if block points to its parent

execution frame which is foo.

|                |
|                |   
+----------------+
| foo [if-block] |
|        *-------+---------> Block Popped
+----------------+
|                |
|       foo      |
+----------------+
|                |   
|      main      |   
+----------------+   
|                |
|    Module      |
+----------------+ 

Step 5: Once execution of the

if-block is over, it is popped

from stack.

|                |
|                |   
|                |   +----------------+ 
|       <--------+---+--------*       |
|                |   |    else-block  |
+----------------+   +----------------+
|                |
|       foo      |
+----------------+
|                |   
|      main      |   
+----------------+   
|                |
|    Module      |
+----------------+ 

Step 6: Else block is added to the top

of stack.

|                |
|                |   
+----------------+
|foo [else-block]|
|        *-------+---------> Block Popped
+----------------+
|                |
|       foo      |
+----------------+
|                |   
|      main      |   
+----------------+   
|                |
|    Module      |
+----------------+ 

Step 7: Foo else block execution over

so the exec frame is popped from stack

|                |
|                |   
|                |
|                |
|                |
+----------------+
|         *------+---------->
|       foo      |
+----------------+
|                |   
|      main      |   
+----------------+   
|                |
|    Module      |
+----------------+ 

Step 8: Return statement for foo is

being executed and then foo is popped out.

|                |
|                |   
|                |
|                |
|                |
|                |
|                |
|                |
+----------------+
|        *-------+----------->
|      main      |   
+----------------+   
|                |
|    Module      |
+----------------+ 

Step 9: Main's execution is over and

hence the exec frame is popped.

|                |
|                |   
|                |
|                |
|                |
|                |
|                |
|                |
|                |
|        		 |
|                |   
+----------------+   
|                |
|    Module      |
+----------------+ 

Step 10: If there are other functions

to be executed in the module

they are executed